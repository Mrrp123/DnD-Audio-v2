#:kivy 2.2.0

#:import dp kivy.metrics.dp

<MainDisplay>:

    Image:
        id: background
        canvas:
            Rectangle:
                size: root.size
                pos: self.pos
                texture: self.texture

    Button:
        id: song_page
        bold: True
        width: min(root.height / 4, root.width / 3)
        height: root.height / 10
        background_color: 1,1,1,0
        color: 0, 1, 1, 1
        x: root.width - self.width
        y: root.height - self.height
        text: "Songs \u203A"
        halign: "right"
        valign: "top"
        text_size: self.size
        font_size: root.height/32
        padding: (0, "15dp", "12dp", 0)
        on_press: self.color = 0, 0.5, 0.5, 1
        on_touch_up: self.color = 0, 1, 1, 1
        on_release:
            root.parent.manager.transition.direction = "left"
            root.parent.manager.current = "songs"

    Button:
        id: settings
        bold: True
        width: min(root.height / 4, root.width / 3)
        height: root.height / 10
        background_color: 1,1,1,0
        color: 0, 1, 1, 1
        x: 0
        y: root.height - self.height
        text: "\u2039 Settings"
        halign: "left"
        valign: "top"
        text_size: self.size
        font_size: root.height/32
        padding: ("12dp", "15dp", 0, 0)
        on_press: self.color = 0, 0.5, 0.5, 1
        on_touch_up: self.color = 0, 1, 1, 1
        on_release:
            root.parent.manager.transition.direction = "right"
            root.parent.manager.current = "settings"
    
    Image:
        id: song_cover
        source: "./assets/covers/default_cover.png"
        #color: 1,1,1,0.5
        size: root.height * (1/3), min(1/self.image_ratio * root.height * (1/3), root.height * (1/3))
        x: -root.width * 2
        fit_mode: "scale-down"
        mipmap: True
        canvas:
            # Create mask for rounded rectangle for song cover
            StencilPush 
            Color:
                rgba: 1,1,1,1
            RoundedRectangle:
                size: self.size#root.height * (1/3), min(1/self.image_ratio * root.height * (1/3), root.height * (1/3))
                pos: root.width / 2 - self.size[0] / 2, root.height - self.size[1] / 2 - root.height * (1/3)
                radius: self.size[1] / 12,
            
            # Draw song cover
            StencilUse
            Rectangle:
                texture: self.texture
                size: self.size#root.height * (1/3), min(1/self.image_ratio * root.height * (1/3), root.height * (1/3))
                pos: root.width / 2 - self.size[0] / 2, root.height - self.size[1] / 2 - root.height * (1/3)

            # Remove mask (so that we can draw the rest of the frame)
            StencilUnUse
            Color:
                rgba: 1,1,1,1
            RoundedRectangle:
                size: self.size#root.height * (1/3), min(1/self.image_ratio * root.height * (1/3), root.height * (1/3))
                pos: root.width / 2 - self.size[0] / 2, root.height - self.size[1] / 2 - root.height * (1/3)
                radius: self.size[1] / 12,

            # Clear the stencil object
            StencilPop
    

    Slider:
        id: audio_position_slider
        min: 0
        max: 1000
        width: root.width * (11/12) - dp(32)
        height: "48dp"
        disabled: True
        background_horizontal: "./assets/buttons/empty.png"
        cursor_image: "./assets/buttons/empty.png"
        background_disabled_horizontal: "./assets/buttons/empty.png"
        cursor_disabled_image: "./assets/buttons/empty.png"
        center_x: root.width * (1/2)
        center_y: root.height * (1/3)
        padding: 0
        on_touch_down: root.begin_seek(args[1])
        on_touch_move: root.update_seek(args[1])
        on_touch_up: root.end_seek(args[1])
        canvas:
            # Draw background rail for song position
            Color:
                rgba: 0.5,0.5,0.5,1
            RoundedRectangle:
                pos: self.pos[0], self.pos[1] + self.height / 2 - self.height / 16
                size: self.size[0], self.height / 8
                radius: self.height / 16,

            # Create mask for active rail for song pos
            StencilPush 
            Color:
                rgba: 0.5,0.5,0.5,1
            RoundedRectangle:
                pos: self.pos[0], self.pos[1] + self.height / 2 - self.height / 16
                size: self.size[0], self.height / 8
                radius: self.height / 16,
            
            # Draw active rail
            StencilUse
            Color:
                rgba: 1,1,1,1
            Rectangle:
                pos: self.pos[0], self.pos[1] + self.height / 2 - self.height / 16
                size: self.size[0] * self.value_normalized, self.height / 8

            # Remove mask (so that we can draw the rest of the frame)
            StencilUnUse
            Color:
                rgba: 0.5,0.5,0.5,1
            RoundedRectangle:
                pos: self.pos[0], self.pos[1] + self.height / 2 - self.height / 16
                size: self.size[0], self.height / 8
                radius: self.height / 16,

            # Clear the stencil object
            StencilPop
    
    Slider:
        id: volume_slider
        min: 0
        max: 100
        width: root.width * (3/4) - dp(32)
        height: "48dp"
        # disabled: False
        background_horizontal: "./assets/buttons/empty.png"
        cursor_image: "./assets/buttons/empty.png"
        background_disabled_horizontal: "./assets/buttons/empty.png"
        cursor_disabled_image: "./assets/buttons/empty.png"
        center_x: root.width * (1/2)
        center_y: root.height * (1/7)
        padding: 0
        on_touch_down: root.begin_change_volume(args[1])
        on_touch_move: root.update_volume(args[1])
        on_touch_up: root.end_change_volume(args[1])
        canvas:
            # Draw background rail for song position
            Color:
                rgba: 0.5,0.5,0.5,1
            RoundedRectangle:
                pos: self.pos[0], self.pos[1] + self.height / 2 - self.height / 16
                size: self.size[0], self.height / 8
                radius: self.height / 16,

            # Create mask for active rail for song pos
            StencilPush 
            Color:
                rgba: 0.5,0.5,0.5,1
            RoundedRectangle:
                pos: self.pos[0], self.pos[1] + self.height / 2 - self.height / 16
                size: self.size[0], self.height / 8
                radius: self.height / 16,
            
            # Draw active rail
            StencilUse
            Color:
                rgba: 1,1,1,1
            Rectangle:
                pos: self.pos[0], self.pos[1] + self.height / 2 - self.height / 16
                size: self.size[0] * self.value_normalized, self.height / 8

            # Remove mask (so that we can draw the rest of the frame)
            StencilUnUse
            Color:
                rgba: 0.5,0.5,0.5,1
            RoundedRectangle:
                pos: self.pos[0], self.pos[1] + self.height / 2 - self.height / 16
                size: self.size[0], self.height / 8
                radius: self.height / 16,

            # Clear the stencil object
            StencilPop
    
    Image:
        id: volume_min_img
        source: "./assets/buttons/volume_min.png"
        #color: 1,1,1,0.5
        size: dp(16), dp(16)
        x: volume_slider.x - dp(20)
        y: volume_slider.center_y - self.height/2
        fit_mode: "scale-down"
        mipmap: True
    
    Image:
        id: volume_max_img
        source: "./assets/buttons/volume_max.png"
        #color: 1,1,1,0.5
        size: dp(16), dp(16)
        x: volume_slider.x + volume_slider.width + dp(10)
        y: volume_slider.center_y - self.height/2
        fit_mode: "scale-down"
        mipmap: True
            

    
    Label:
        id: song_pos
        bold: True
        color: 1,1,1,1
        x: 0
        y: audio_position_slider.center_y - dp(12) - self.height
        #center_y: root.height * (13/48)
        halign: "left"
        text: "0:00"
        text_size: root.width/2 - 1, None
        size: self.texture_size
        font_size: root.height/46
        padding: audio_position_slider.x + dp(2), 0, 0, 0

    
    Label:
        id: neg_song_pos
        bold: True
        color: 1,1,1,1
        x: root.width/2
        y: audio_position_slider.center_y - dp(12) - self.height
        #center_y: root.height * (13/48)
        halign: "right"
        text: "-0:00"
        text_size: root.width/2, None
        size: self.texture_size
        font_size: root.height/46
        padding: 0, 0, audio_position_slider.x + dp(2), 0
    
    Label:
        id: song_name
        bold: True
        color: 1,1,1,1
        x: root.width * (1/2) - (root.width * (11/12) - dp(32)) / 2 + dp(2)
        center_y: root.height * (18/48)
        halign: "left"
        text: ""
        text_size: root.width - root.width/4, None
        size: self.texture_size
        font_size: root.height/40

    Button:
        id: previous_song
        bold: True
        width: root.height * (15/224)
        height: self.width
        x: root.width * (1/4) - self.width / 2
        y: (audio_position_slider.center_y + volume_slider.center_y) / 2 - self.height / 2
        disabled: True
        # center_x: root.width * (1/4)
        # center_y: root.height * (1/6)
        on_touch_up: root.get_tap_type(self, args[1])

        background_normal: "./assets/buttons/backward_skip_normal.png"
        background_disabled_normal: "./assets/buttons/backward_skip_normal.png"
        background_down: "./assets/buttons/backward_skip_pressed.png"
        background_disabled_down: "./assets/buttons/backward_skip_pressed.png"
        border: (0,0,0,0)
    
    Button:
        id: next_song
        bold: True
        width: root.height * (15/224)
        height: self.width
        x: root.width * (3/4) - self.width / 2
        y: (audio_position_slider.center_y + volume_slider.center_y) / 2 - self.height / 2
        disabled: True
        # center_x: root.width * (3/4)
        # center_y: root.height * (1/6)
        on_touch_up: root.get_tap_type(self, args[1])
        
        background_normal: "./assets/buttons/forward_skip_normal.png"
        background_disabled_normal: "./assets/buttons/forward_skip_normal.png"
        background_down: "./assets/buttons/forward_skip_pressed.png"
        background_disabled_down: "./assets/buttons/forward_skip_pressed.png"
        border: (0,0,0,0)
    
    Button:
        id: pause
        bold: True
        width: root.height * (15/224)
        height: self.width
        x: root.width * (1/2) - self.width / 2
        y: (audio_position_slider.center_y + volume_slider.center_y) / 2 - self.height / 2
        # center_x: root.width * (1/2)
        # center_y: root.height * (1/6)
        on_release: root.pause_music()

        background_normal: "./assets/buttons/play_normal.png"
        background_down: "./assets/buttons/play_pressed.png"
        border: (0,0,0,0)
    
    Button:
        id: reverse
        bold: True
        width: root.height * (15/224)
        height: self.width
        background_color: 0,1,1,1
        x: root.width * (1/4) - self.width/2
        center_y: root.height * (1/18)
        text: "Reverse"
        on_release: root.reverse()

        border: (0,0,0,0)

    # Button:
    #     id: zawarudo
    #     bold: True
    #     width: root.height * (15/224)
    #     height: self.width
    #     background_color: 0,1,1,1
    #     x: root.width * (1/2) - self.width/2
    #     center_x: root.width * (1/2)
    #     center_y: root.height * (1/12)
    #     text: "ZA WARUDO!!!"
    #     on_release: root.stop_time()

    #     border: (0,0,0,0)

<SongButton>:
    bold: True
    # width: (root.width/3 - root.width/12) / 2
    # height: self.width
    halign: "left"
    valign: "center"
    text_size: self.size
    font_size: app.root.children[0].height / 40
    size_hint: 1, None
    background_normal: "./assets/buttons/song_button_normal.png"
    image: ""
    #background_color: 0,0,0,1
    padding: root.height, 0, root.width / 12, 0
    background_down: "./assets/buttons/song_button_pressed.png"
    canvas.after:
        Color:
            rgba: 1,1,1,0.5
        Line:
            width: 1
            points: (root.height, self.y, root.width, self.y)
    Image:
        id: song_cover
        source: root.image#"./assets/covers/default_cover.png"
        size: root.height * (2/3), min(1/self.image_ratio * root.height * (2/3), root.height * (2/3))
        x: -root.width
        fit_mode: "scale-down"
        mipmap: True
        canvas:
            # Create mask for rounded rectangle for song cover
            StencilPush 
            Color:
                rgba: 1,1,1,1
            RoundedRectangle:
                size: root.height * (2/3), min(1/self.image_ratio * root.height * (2/3), root.height * (2/3))
                pos: self.parent.x + root.height * (1/6), self.parent.y + (root.height - min(1/self.image_ratio * root.height * (2/3), root.height * (2/3))) / 2
                radius: self.size[1] / 12,
            
            # Draw song cover
            StencilUse
            Rectangle:
                texture: self.texture
                size: root.height * (2/3), min(1/self.image_ratio * root.height * (2/3), root.height * (2/3))
                pos: self.parent.x + root.height * (1/6), self.parent.y + (root.height - min(1/self.image_ratio * root.height * (2/3), root.height * (2/3))) / 2

            # Remove mask (so that we can draw the rest of the frame)
            StencilUnUse
            Color:
                rgba: 1,1,1,1
            RoundedRectangle:
                size: root.height * (2/3), min(1/self.image_ratio * root.height * (2/3), root.height * (2/3))
                pos: self.parent.x + root.height * (1/6), self.parent.y + (root.height - min(1/self.image_ratio * root.height * (2/3), root.height * (2/3))) / 2
                radius: self.size[1] / 12,

            # Clear the stencil object
            StencilPop


<SongsDisplay>:
    Button:
        id: song_page
        bold: True
        width: min(root.height / 4, root.width / 3)
        height: root.height / 10
        background_color: 1,1,1,0
        color: 0, 1, 1, 1
        x: 0
        y: root.height - self.height
        text: "\u2039 Back"
        halign: "left"
        valign: "top"
        text_size: self.size
        # size: self.texture_size
        font_size: root.height/32
        padding: ("12dp", "15dp", 0, 0)
        on_press: self.color = 0, 0.5, 0.5, 1
        on_touch_up: self.color = 0, 1, 1, 1
        on_release:
            root.parent.manager.transition.direction = "right"
            root.parent.manager.current = "main"


    Label:
        id: song_label
        bold: True
        color: 1,1,1,1
        width: root.width
        x: 0
        y: root.height - root.height / 6
        halign: "left"
        text: "Songs"
        text_size: self.size
        #size: self.texture_size
        font_size: root.height/20
        padding: ("23dp", "15dp", 0, 0)


    TextInput: # This exists only to help the rounded rectangle figure out its height, it mimics the settings of song_search
        id: size_indicator
        background_color: 0,0,0,0
        foreground_color: 0,0,0,0
        disabled: True
        visible: False
        width: root.width - song_label.padding[0]*2
        height: self.minimum_height
        text_size: self.size 
        font_size: root.height/40
        padding: 6,6,6,6

    Widget:
        id: text_box_background
        canvas:
            Color:
                rgba: .2,.2,.2,.3
            RoundedRectangle:
                size: size_indicator.width + size_indicator.height / 2, size_indicator.size[1]
                pos: song_label.x + song_label.padding[0] - size_indicator.height / 4, root.height * (3/4)
                radius: size_indicator.height / 2,

    TextInput:
        id: song_search
        bold: True
        width: root.width - song_label.padding[0]*2
        height: self.minimum_height
        background_color: 0,0,0,0
        foreground_color: 1,1,1,1
        cursor_color: 1,1,1,1
        multiline: False
        x: song_label.x + song_label.padding[0]
        y: root.height * (3/4)
        halign: "left"
        hint_text: "Search in Songs"
        text_size: self.size 
        font_size: root.height/40
        padding: size_indicator.padding
        on_text: root.on_text(self)
    
    RecycleView:
        id: song_list
        viewclass: "SongButton"
        width: root.width
        height: song_search.y - song_search.height
        RecycleBoxLayout:
            default_size: None, size_indicator.size[1]*2
            default_size_hint: 1, None
            size_hint: None, None
            height: self.minimum_height#song_search.y - song_search.height
            width: root.width
            orientation:  "vertical"
            background_color: 1,1,1,0.3

<SettingsDisplay>:

    # Image:
    #     id: background
    #     canvas:
    #         Rectangle:
    #             size: root.size
    #             pos: self.pos
    #             texture: self.texture

    Label:
        id: fade_slider_label
        bold: True
        color: 1,1,1,1
        x: 0
        y: root.height * (40/48)
        halign: "left"
        text: "Crossfade Duration:"
        text_size: root.width, None
        size: self.texture_size
        font_size: root.height/32
        padding: "32dp", 0, 0, 0
    
    Slider:
        id: fade_slider
        min: 1000
        max: 12000
        step: 1000
        width: root.width * (3/4)
        height: "48dp"
        background_color: 1,1,1,1
        x: "16dp"
        center_y: root.height * (38/48)
        on_touch_up: root.change_fade_duration(args[1])
        padding: "16dp"
    
    Label:
        id: fade_slider_value
        bold: True
        color: 1,1,1,1
        x: fade_slider.x + fade_slider.width
        y: root.height * (38/48) - self.height/2
        halign: "left"
        text: f"{int(fade_slider.value / 1000)}s"
        text_size: root.width, None
        size: self.texture_size
        font_size: root.height/32
        padding: "8dp", 0, 0, 0
    
    Label:
        id: speed_slider_label
        bold: True
        color: 1,1,1,1
        x: 0
        y: root.height * (33/48)
        halign: "left"
        text: "Playback Speed:"
        text_size: root.width, None
        size: self.texture_size
        font_size: root.height/32
        padding: "32dp", 0, 0, 0

    Slider:
        id: speed_slider
        min: 50
        max: 200
        step: 5
        width: root.width * (3/4)
        height: 35
        #background_color: 1,1,1,1
        x: "16dp"
        center_y: root.height * (31/48)
        on_touch_up: root.change_speed(args[1])
        padding: "16dp"
    
    Label:
        id: speed_slider_value
        bold: True
        color: 1,1,1,1
        x: speed_slider.x + speed_slider.width
        y: root.height * (31/48) - self.height/2
        halign: "left"
        text: f"{speed_slider.value / 100:.2f}x"
        text_size: root.width, None
        size: self.texture_size
        font_size: root.height/32
        padding: "8dp", 0, 0, 0
    
    Label:
        id: fps
        bold: True
        color: 1,1,0,1
        center_x: root.width * (1/2)
        center_y: root.height * (1/2)
        text: "0"
    
    Label:
        id: debug_info
        bold: True
        color: 0,0.7,1,1
        center_x: root.width * (2/4)
        center_y: root.height * (3/16)
        halign: "left"
        text: "Audio player currently not active"
        text_size: root.width * (11/12), None
    
    Button:
        bold: True
        width: min(root.height / 4, root.width / 3)
        height: root.height / 10
        background_color: 1,1,1,0
        color: 0, 1, 1, 1
        x: root.width - self.width
        y: root.height - self.height
        text: "Back \u203A"
        halign: "right"
        valign: "top"
        text_size: self.size
        font_size: root.height/32
        padding: (0, "15dp", "12dp", 0)
        on_press: self.color = 0, 0.5, 0.5, 1
        on_touch_up: self.color = 0, 1, 1, 1
        on_release:
            root.parent.manager.transition.direction = "left"
            root.parent.manager.current = "main"